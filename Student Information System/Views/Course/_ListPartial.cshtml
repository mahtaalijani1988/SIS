@using DbModel.DomainClasses.Enums
@using PagedList
@using PagedList.Mvc
@using DbModel.ViewModel.Course
@model CourseListVM
@Html.AntiForgeryToken()
<table class="table table-striped" id="CourseTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Unit</th>
            <th>Parent Name</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var advs in Model.CourseList)
        {
            <tr>
                @*<td>@advs.Id</td>*@
                <td><span class="label label-important">@advs.Name</span></td>
                <td><span class="label label-important">@advs.Unit</span></td>
                <td><span class="label label-important">
                    @if (advs.Parent_id.HasValue)
                    {
                        @advs.Parent.Name
                    }
                    </span></td>
                <td>
                    <div class="btn-group pull-right">
                        <button data-toggle="dropdown" class="btn dropdown-toggle">
                            <i class="icon-cog"></i>
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a href="~/Course/Edit/@advs.Id"><i class="icon-file"></i> Edit</a></li>
                            <li class="divider"></li>
                            <li><a href="#" id="row-@advs.Id"><i class="icon-trash"></i> Delete</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="widget-content">
    <div class="widget-box">
        @using (Ajax.BeginForm("List", "Course", null, new AjaxOptions
        {
            HttpMethod = "POST", InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "CourseList"
        }, new { @class = "well form-inline", id = "CourseFilterForm" }))
        {
            @Html.Hidden("term", Model.Term)
            @*@Html.Hidden("courseSearchBy", ViewBag.courseSearchBy as string)*@
            @*@Html.DropDownList("courseOrderBy", ViewBag.courseOrderByList as IEnumerable<SelectListItem>, new { @class = "form-control" })*@
            @Html.DropDownList("order", ViewBag.OrderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
            @Html.DropDownList("count", ViewBag.CountList as IEnumerable<SelectListItem>, new { @class = "form-control" })

            <button class="btn">
                <i class="icon-key bigger-110"></i>
                Sort By
            </button>
        }
    </div>
</div>
@Html.PagedListPager(new StaticPagedList<CourseViewModel>(Model.CourseList, Model.PageNumber,
    Model.PageCount, Model.TotalCourses),
    pageNumber => Url.Action("List", "Course", new
    {
        term = Model.Term,
        page = pageNumber,
        count = Model.PageCount,
        order = Model.Order,
        //productOrderBy = Model.ProductOrderBy,
        //productType = Model.ProductType,
        //categoryId = Model.CategoryId,
        //deleted = Model.Deleted,
        //freeSend = Model.FreeSend
    }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                new AjaxOptions
                {
                    AllowCache = false,
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "CourseList"
                }
))
<script>
    Public.Routin();
</script>
