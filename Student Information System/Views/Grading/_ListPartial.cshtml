@using Student_Information_System.Extentions.Helpers
@using DbModel.DomainClasses.Enums
@using PagedList
@using PagedList.Mvc
@using DbModel.ViewModel.Election
@model ScoreListVM
@Html.AntiForgeryToken()
<table class="table table-striped" id="ScoreTable">
    <thead>
        <tr>
            <th>Student Name</th>
            <th>Grade</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var advs in Model.ScoreList)
        {
            <tr>

                <td><span class="label label-important">@advs.Student.FirstName @advs.Student.LastName</span></td>
                <td><span class="label label-important">@Html.ConvertToScoreTodrs(advs.Score)</span></td>
                <td>
                    <div class="btn-group pull-right">
                        <button data-toggle="dropdown" class="btn dropdown-toggle">
                            <i class="icon-cog"></i>
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a href="~/Grading/SetGrad/@advs.Id"><i class="icon-file"></i> Set Grade</a></li>
                        </ul>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="widget-content">
    <div class="widget-box">
        @using (Ajax.BeginForm("List", "Grading", null, new AjaxOptions
        {
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "GradingList"
        }, new { @class = "well form-inline", id = "GradingFilterForm" }))
        {
            @Html.Hidden("term", Model.Term)
            @*@Html.Hidden("courseSearchBy", ViewBag.courseSearchBy as string)*@
            @*@Html.DropDownList("courseOrderBy", ViewBag.courseOrderByList as IEnumerable<SelectListItem>, new { @class = "form-control" })*@
            @Html.DropDownList("order", ViewBag.OrderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
            @Html.DropDownList("count", ViewBag.CountList as IEnumerable<SelectListItem>, new { @class = "form-control" })

            <button class="btn">
                <i class="icon-key bigger-110"></i>
                Sort By
            </button>
        }
    </div>
</div>
@Html.PagedListPager(new StaticPagedList<ScoreViewModel>(Model.ScoreList, Model.PageNumber,
    Model.PageCount, Model.TotalElections),
    pageNumber => Url.Action("List", "Grading", new
    {
        term = Model.Term,
        page = pageNumber,
        count = Model.PageCount,
        order = Model.Order,
        objSearchBy = Model.ScoreStateType,
        objOrderBy = Model.ElectionOrderBy,
        //categoryId = Model.CategoryId,
        //deleted = Model.Deleted,
        //freeSend = Model.FreeSend
    }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast,
                new AjaxOptions
                {
                    AllowCache = false,
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "GradingList"
                }
))
<script>
    Public.Routin();
</script>

